<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="use_sim_time" default="true"/>
  <arg name="vehicle_model" default="sample_vehicle"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="remove_ground" default="false"/>
  <arg name="data_path" default="$(env HOME)/autoware_data"/>
  <arg name="model_name" default="centerpoint"/>
  <arg name="model_path" default="$(var data_path)/lidar_centerpoint"/>
  <arg name="input_pointcloud" default="/sensor/lidar/top/points"/>
  <arg name="rviz" default="true"/>
  <arg name="rviz_config" default="$(find-pkg-share autoware_launch)/rviz/autoware_lidar_detection.rviz"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <let name="self_cropbox_pointcloud" value="$(var input_pointcloud)/self_cropped"/>
  <let name="ground_filter_input" value="$(var self_cropbox_pointcloud)" if="$(var remove_ground)"/>
  <let name="ground_filter_input" value="/empty_pointcloud" unless="$(var remove_ground)"/>
  <let name="perception_pointcloud" value="/perception/obstacle_segmentation/pointcloud" if="$(var remove_ground)"/>
  <let name="perception_pointcloud" value="$(var self_cropbox_pointcloud)" unless="$(var remove_ground)"/>

  <arg name="model_param_path" default="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/lidar_model/$(var model_name).param.yaml"/>
  <arg name="ml_package_param_path" default="$(var model_path)/$(var model_name)_ml_package.param.yaml"/>
  <arg name="class_remapper_param_path" default="$(var model_path)/detection_class_remapper.param.yaml"/>

  <!-- Pointcloud container -->
  <node_container pkg="rclcpp_components" exec="component_container_mt" name="pointcloud_container" namespace="">

    <composable_node pkg="pointcloud_preprocessor" plugin="pointcloud_preprocessor::CropBoxFilterComponent" name="self_points_crop_box_filter">
      <remap from="input" to="$(var input_pointcloud)"/>
      <remap from="output" to="$(var self_cropbox_pointcloud)"/>
      <param name="input_frame" value="lidar_ouster_top"/>
      <param name="output_frame" value="base_footprint"/>
      <param name="max_queue_size" value="5"/>
      <param name="min_x" value="-3.0"/>
      <param name="max_x" value="3.0"/>
      <param name="min_y" value="-2.1"/>
      <param name="max_y" value="2.1"/>
      <param name="min_z" value="-2.0"/>
      <param name="max_z" value="2.0"/>
      <param name="negative" value="true"/>
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <extra_arg name="use_intra_process_comms" value="false"/>
    </composable_node>

    <!-- ScanGroundFilter (Ground segmentation) -->
    <composable_node pkg="ground_segmentation" plugin="ground_segmentation::ScanGroundFilterComponent" name="ground_segmentation" if="$(var remove_ground)">
      <remap from="input" to="$(var ground_filter_input)"/>
      <remap from="output" to="$(var perception_pointcloud)"/>
      <param name="input_frame" value="base_footprint"/>
      <param name="output_frame" value="base_footprint"/>
      <param name="max_queue_size" value="2"/>
      <param name="global_slope_max_angle_deg" value="3.0"/>
      <param name="local_slope_max_angle_deg" value="10.0"/>
      <param name="split_points_distance_tolerance" value="0.2"/>
      <param name="use_virtual_ground_point" value="true"/>
      <param name="split_height_distance" value="0.1"/>
      <param name="non_ground_height_threshold" value="0.20"/>
      <param name="grid_size_m" value="0.1"/>
      <param name="grid_mode_switch_radius" value="20.0"/>
      <param name="gnd_grid_buffer_size" value="4"/>
      <param name="detection_range_z_max" value="20.5"/>
      <param name="elevation_grid_mode" value="false"/>
      <param name="use_recheck_ground_cluster" value="true"/>
      <param name="use_lowest_point" value="true"/>
      <param name="low_priority_region_x" value="-20.0"/>
      <param name="center_pcl_shift" value="0.0"/>
      <param name="radial_divider_angle_deg" value="1.0"/>
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <extra_arg name="use_intra_process_comms" value="false"/>
    </composable_node>

    <!-- Lidar Centerpoint -->
    <composable_node pkg="lidar_centerpoint" plugin="centerpoint::LidarCenterPointNode" name="lidar_centerpoint">
      <remap from="~/input/pointcloud" to="$(var perception_pointcloud)"/>
      <remap from="~/output/objects" to="/perception/object_recognition/detection/centerpoint/objects"/>
      <param from="$(var model_param_path)" allow_substs="true"/>
      <param from="$(var ml_package_param_path)" allow_substs="true"/>
      <param from="$(var class_remapper_param_path)"/>
      <param name="build_only" value="false"/>
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <extra_arg name="use_intra_process_comms" value="false"/>
    </composable_node>
  </node_container>

  <!-- Rviz -->
  <group>
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(var rviz_config) -s $(find-pkg-share autoware_launch)/rviz/image/autoware.png" if="$(var rviz)"/>
  </group>
</launch>
